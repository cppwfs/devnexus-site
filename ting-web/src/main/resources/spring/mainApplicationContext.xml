<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:oxm="http://www.springframework.org/schema/oxm" xmlns:cloud="http://schema.cloudfoundry.org/spring"
	xsi:schemaLocation="http://schema.cloudfoundry.org/spring http://schema.cloudfoundry.org/spring/cloudfoundry-spring-0.6.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		http://www.springframework.org/schema/oxm http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">

	<import resource="classpath:spring/applicationContext-security.xml" />

	<context:component-scan base-package="com.devnexus.ting.core.service" />
	<context:component-scan base-package="com.devnexus.ting.core.dao" />

	<tx:annotation-driven transaction-manager="transactionManager" />
	<context:annotation-config />

	<bean id="jaxbMarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
		<property name="classesToBeBound">
			<list>
				<value>com.devnexus.ting.core.model.Event</value>
				<value>com.devnexus.ting.core.model.Presentation</value>
				<value>com.devnexus.ting.core.model.PresentationList</value>
				<value>com.devnexus.ting.core.model.Speaker</value>
				<value>com.devnexus.ting.core.model.SpeakerList</value>
			</list>
		</property>
	</bean>

	<bean
		class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />

	<bean
		class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />
	<bean id="validator"
		class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" />

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<bean id="hibernateJpaVendorAdapter"
		class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
		<property name="showSql" value="false" />
		<property name="generateDdl" value="false" />
	</bean>
	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>classpath:messages</value>
			</list>
		</property>
		<property name="defaultEncoding" value="utf-8" />
		<property name="cacheSeconds" value="0" />
	</bean>

	<bean id="seedDataEventListener"
		class="com.hillert.apptools.spring.ContextRefreshedEventListener" />

	<beans profile="default"><!-- Demo deployment, integration testing -->
		<context:property-placeholder location="classpath:ting-demo.properties" />
	</beans>
	<beans profile="standalone">
		<context:property-placeholder location="file:${TING_HOME}/ting.properties" />
	</beans>

	<beans profile="standalone, default">
		<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
			destroy-method="close">
			<property name="driverClassName" value="${database.jdbc.driverClassName}" />
			<property name="url" value="${database.jdbc.url}" />
			<property name="username" value="${database.jdbc.username}" />
			<property name="password" value="${database.jdbc.password}" />
			<property name="maxActive" value="100" />
			<property name="maxIdle" value="30" />
			<property name="maxWait" value="1000" />
			<property name="poolPreparedStatements" value="true" />
			<property name="defaultAutoCommit" value="true" />
		</bean>
		<bean id="entityManagerFactory"
			class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
			<property name="dataSource" ref="dataSource" />
			<property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapter" />
			<property name="persistenceUnitName" value="base" />
			<property name="jpaProperties">
				<props>
					<prop key="hibernate.dialect">${database.hibernate.dialect}</prop>
					<prop key="hibernate.query.substitutions">true '1', false '0'</prop>
					<prop key="hibernate.generate_statistics">true</prop>
					<prop key="hibernate.cache.use_second_level_cache">true</prop>
					<prop key="hibernate.cache.use_query_cache">true</prop>
					<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory
					</prop>
					<prop key="hibernate.show_sql">${database.hibernate.show_sql}</prop>
					<prop key="hibernate.format_sql">true</prop>
				</props>
			</property>
		</bean>
	</beans>
	<beans profile="cloud">
		<cloud:data-source id="devnexus-db" />
		<bean id="entityManagerFactory"
			class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
			<property name="dataSource" ref="devnexus-db" />
			<property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapter" />
			<property name="persistenceUnitName" value="base" />
			<property name="jpaProperties">
				<props>
					<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
					<prop key="hibernate.query.substitutions">true '1', false '0'</prop>
					<prop key="hibernate.generate_statistics">true</prop>
					<prop key="hibernate.cache.use_second_level_cache">true</prop>
					<prop key="hibernate.cache.use_query_cache">true</prop>
					<prop key="hibernate.cache.region.factory_class">net.sf.ehcache.hibernate.EhCacheRegionFactory</prop>
					<prop key="hibernate.show_sql">false</prop>
					<prop key="hibernate.format_sql">true</prop>
					<prop key="hibernate.hbm2ddl.auto">create-drop</prop>
				</props>
			</property>
		</bean>
	</beans>
</beans>
